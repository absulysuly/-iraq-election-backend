name: Deploy Backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma Client
        run: npm run prisma:generate
      
      - name: Run tests
        run: npm test || echo "No tests configured yet"

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma Client
        run: npm run prisma:generate
      
      # Add your staging deployment steps here
      # Example for Railway, Render, or other platforms
      - name: Deploy to Staging
        run: echo "Add staging deployment commands here"
        # env:
        #   DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}

  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma Client
        run: npm run prisma:generate
      
      # Add your production deployment steps here
      # Example: Deploy to Railway
      # - name: Deploy to Railway
      #   uses: railway-app/railway-deploy@v1
      #   with:
      #     railway_token: ${{ secrets.RAILWAY_TOKEN }}
      
      # Example: Deploy to Render
      # - name: Deploy to Render
      #   env:
      #     RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      #   run: |
      #     curl -X POST https://api.render.com/deploy/your-service-id \
      #       -H "Authorization: Bearer $RENDER_API_KEY"
